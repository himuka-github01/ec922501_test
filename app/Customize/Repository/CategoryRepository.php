<?php

/*
 * This file is part of EC-CUBE
 *
 * Copyright(c) EC-CUBE CO.,LTD. All Rights Reserved.
 *
 * http://www.ec-cube.co.jp/
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

//namespace Eccube\Repository;
namespace Customize\Repository;

use Doctrine\DBAL\Exception\DriverException;
use Doctrine\DBAL\Exception\ForeignKeyConstraintViolationException;
use Eccube\Common\EccubeConfig;
use Eccube\Entity\Category;
use Eccube\Repository\CategoryRepository as BaseCategoryRepository;   // これを忘れないこと
use Symfony\Bridge\Doctrine\RegistryInterface;
use Symfony\Component\HttpFoundation\Session\Session;
//use Symfony\Component\Validator\Constraints\DateTime;

/**
 * CategoryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CategoryRepository extends BaseCategoryRepository
{
    /**
     * 催事一覧を取得する.
     *
     * 引数 $dt(日付)を指定した場合は, 該当日が期間内となる催事を抽出.
     *
     * @param DateTime $dt 指定日付
     *
     * @return Category[] カテゴリの配列
     */
    public function getSaijiList(\DateTime $dt = null)
    {
        // 定数取得
        $parentId = $this->eccubeConfig['hdn_saiji_category_id'];
        if ( empty($parentId) ) {
            throw new NotFoundHttpException('Please set hdn_saiji_category_id to eccube.yaml');
        }
        // 催事用の親カテゴリを取得
        $saijiParent = $this->find($parentId);
        if ( !$saijiParent ) {
            throw new NotFoundHttpException('Please set hdn_saiji_category_id('.$parentId).' correctly';
        }
        // 日付指定
        if ( is_null($dt) ) {
            // (HDN) 日付のみとする
            $wDt = new \DateTime();
            $dt = new \DateTime($wDt->format('Y-m-d'));
            log_info("getSaijiList dt=".$dt->format('Y-m-d'));
        }
        // 日付指定
        if ( is_null($dt) ) {
            // 元クラスにてリスト取得
            return $this->getList($saijiParent);
        }

        $qb = $this->createQueryBuilder('c1')
            ->select('c1, c2, c3, c4, c5')
            ->leftJoin('c1.Children', 'c2')
            ->leftJoin('c2.Children', 'c3')
            ->leftJoin('c3.Children', 'c4')
            ->leftJoin('c4.Children', 'c5')
            ->orderBy('c1.sort_no', 'DESC')
            ->addOrderBy('c2.sort_no', 'DESC')
            ->addOrderBy('c3.sort_no', 'DESC')
            ->addOrderBy('c4.sort_no', 'DESC')
            ->addOrderBy('c5.sort_no', 'DESC');

        $qb->where('c1.Parent = :Parent')->setParameter('Parent', $saijiParent);
        $qb->andWhere('c1.dispStartDt <= :dt1')->setParameter('dt1', $dt);
        $qb->andWhere('c1.dispEndDt >= :dt2')->setParameter('dt2', $dt);

        $Categories = $qb->getQuery()
            ->useResultCache(true, $this->getCacheLifetime())
            ->getResult();

        return $Categories;
    }
    /*
     * 催事コードにより取得
     *
     * @param string $saiji_cd 催事コード
     *
     * @return Category カテゴリ
     */
   public function findOneBySaijiCd($saijiCd): ?Category
    {
        return $this->createQueryBuilder('c')
            ->andWhere('c.saijiCd = :val')
            ->setParameter('val', $saijiCd)
            ->getQuery()
            ->getOneOrNullResult()
        ;
    }

}
